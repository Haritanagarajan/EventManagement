@model EventManagement.Models.Reunion

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Reunion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.reunionid)
        @Html.HiddenFor(model => model.reunionuserid)
        @Html.HiddenFor(model => model.reunioneventcost)
        @Html.HiddenFor(model => model.reunionhallcapacity)

        <div class="form-group">
            @Html.LabelFor(model => model.reuniondecorations, "reuniondecorations", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("reuniondecorations", ViewBag.Decor as SelectList, "Decor", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.reuniondecorations, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.reuniontheme, "reuniontheme", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("reuniontheme", ViewBag.Theme as SelectList, "Themes", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.reuniontheme, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.reunionchairs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.reunionchairs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.reunionchairs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.reuniontables, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.reuniontables, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.reuniontables, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.reuniondatetime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.reuniondatetime, new { htmlAttributes = new { @class = "form-control datepicker" } })*@
                <input type="datetime-local" class="" name="reuniondatetime" />
                @Html.ValidationMessageFor(model => model.reuniondatetime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.reunioncakes, "reunioncakes", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("reunioncakes", ViewBag.Cake as SelectList, "Cakes ", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.reunioncakes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.reunionlocation, "reunionlocation", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("reunionlocation", ViewBag.Location as SelectList, "Locations", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.reunionlocation, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.reunionbeverages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.reunionbeverages)
                    @Html.ValidationMessageFor(model => model.reunionbeverages, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.reunionPhotography, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.reunionPhotography)
                    @Html.ValidationMessageFor(model => model.reunionPhotography, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.reunionStyling, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.reunionStyling)
                    @Html.ValidationMessageFor(model => model.reunionStyling, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.reunionHospitality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.reunionHospitality)
                    @Html.ValidationMessageFor(model => model.reunionHospitality, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



<script>
    var today = new Date().toISOString().slice(0, 16);
    document.getElementsByName("reuniondatetime")[0].min = today;
</script>