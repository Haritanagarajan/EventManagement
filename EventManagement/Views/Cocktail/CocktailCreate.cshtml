@model EventManagement.Models.CocktailParty

@{
    ViewBag.Title = "CocktailCreate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>CocktailCreate</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CocktailParty</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.cockdecorations, "cockdecorations", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("cockdecorations", ViewBag.Decor as SelectList, "Decor", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cockdecorations, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cocktheme, "cocktheme", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("cocktheme", ViewBag.Theme as SelectList, "Themes", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cocktheme, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cockchairs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cockchairs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cockchairs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cocktables, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cocktables, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cocktables, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.cockdatetime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cockdatetime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.cockdatetime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cockcakes, "cockcakes", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("cockcakes", ViewBag.Cake as SelectList, "Cakes ", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cockcakes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cocklocation, "cocklocation", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("cocklocation", ViewBag.Location as SelectList, "Locations", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cocklocation, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.cockbeverages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.cockbeverages)
                    @Html.ValidationMessageFor(model => model.cockbeverages, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section scripts{
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <!-- Include jQuery Timepicker scripts and stylesheets -->
    <link rel="stylesheet" href="path-to-your-jquery-timepicker.css">
    <script src="path-to-your-jquery-timepicker.js"></script>

    <script>
        $(document).ready(function () {
            $(".datepicker").datepicker({
                minDate: new Date(),
                beforeShowDay: function (date) {
                    var blockDates = [new Date(new Date().getFullYear(), 8, 19), new Date(new Date().getFullYear(), 8, 20)];
                    var dateString = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();
                    return [blockDates.indexOf(dateString) === -1];
                }
            });

            var timerVal = moment().format('hh:mm A');

            $('.timepicker').timepicker(
                {
                    template: 'dropdown',
                    minuteStep: 1,
                    secondStep: 1,
                    showMeridian: true,
                    defaultTime: timerVal
                });
        });
    </script>
}
