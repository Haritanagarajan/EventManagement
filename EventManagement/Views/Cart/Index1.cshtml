@model EventManagement.ViewModel.CartViewModel

@{
    ViewBag.Title = "Cart";
}

<p>Welcome to EventPulse, @User.Identity.Name</p>
<p>Welcome to EventPulse, @User.Identity.IsAuthenticated</p>

<script>
    $(document).ready(function () {
        console.log("hi");
        document.getElementById("halfAmount").value =@(  Model.birthdaytable.Sum(b => b.bdayeventcost) +
                                      Model.babyshowertable.Sum(b => b.babyshowereventcost) +
                                      Model.Anniversary.Sum(a => a.annieventcost) +
                                      Model.BachelorParty.Sum(b => b.bacheloreventcost) +
                                      Model.CocktailParty.Sum(c => c.cockeventcost) +
                                      Model.Wedding.Sum(w => w.weddingeventcost) +
                                      Model.Reunion.Sum(r => r.reunioneventcost));
    });
</script>







<script>
    $(document).ready(function () {
        console.log("hi");
        var dateValue =
            '@(Model.birthdaytable.Select(b => b.bdaydatetime).FirstOrDefault())' +
            ',' +
            '@(Model.babyshowertable.Select(b => b.babyshowerdatetime).FirstOrDefault())' +
            ',' +
            '@(Model.Anniversary.Select(a => a.annidatetime).FirstOrDefault())' +
            ',' +
            '@(Model.BachelorParty.Select(b => b.bachelordatetime).FirstOrDefault())' +
            ',' +
            '@(Model.CocktailParty.Select(c => c.cockdatetime).FirstOrDefault())' +
            ',' +
            '@(Model.Wedding.Select(w => w.weddingdatetime).FirstOrDefault())' +
            ',' +
            '@(Model.Reunion.Select(r => r.reuniondatetime).FirstOrDefault())';

        document.getElementById("bookingdatetime").value = dateValue;
    });
</script>






<div class="container" style="background-color: #949e99; padding: 20px; color: white;">

    @if (Model.birthdaytable.Any() || Model.babyshowertable.Any() || Model.Anniversary.Any() || Model.BachelorParty.Any() || Model.CocktailParty.Any() || Model.Wedding.Any() || Model.Reunion.Any())
    {

        <h5 class="text-uppercase p-2 text-center">All Events</h5>
        <table class="table table-bordered table-striped">
            <thead class="thead-dark text-black">
                <tr>
                    <th>Event Type</th>
                    <th>Event Date</th>
                    <th>Location</th>
                    <th>Cakes</th>
                    <th>Theme</th>
                    <th>Decorations</th>
                    <th>Event Cost</th>
                    <th>User ID</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var bday in Model.birthdaytable)
                {
                    int? userId = Session["UserId"] as int?;

                    if (Session["UserId"] != null && Session["UserId"].ToString() == bday.bdayuserid.ToString())
                    {
                        <tr>
                            <td>Birthday</td>
                            <td>@bday.bdaydatetime</td>
                            <td>@bday.bdaylocation</td>
                            <td>@bday.bdaycakes</td>
                            <td>@bday.bdaytheme</td>
                            <td>@bday.bdaydecorations</td>
                            <td>@bday.bdayeventcost</td>
                            <td>@bday.bdayuserid</td>

                            <td>
                                @Html.ActionLink("Delete", "Delete", "Birthday", new { id = bday.id }, null)
                            </td>

                        </tr>
                    }
                }

                @foreach (var baby in Model.babyshowertable)
                {
                    int? userId = Session["UserId"] as int?;

                    if (Session["UserId"] != null && Session["UserId"].ToString() == baby.babyshoweruserid.ToString())
                    {
                        <tr>
                            <td>Baby Shower</td>
                            <td>@baby.babyshowerdatetime</td>
                            <td>@baby.babyshowerlocation</td>
                            <td>@baby.babyshowercakes</td>
                            <td>@baby.babyshowertheme</td>
                            <td>@baby.babyshowerdecorations</td>
                            <td>@baby.babyshowereventcost</td>
                            <td>@baby.babyshoweruserid</td>
                            <td>
                                @Html.ActionLink("Delete", "Delete", "Babyshower", new { id = baby.id }, null)
                            </td>
                        </tr>
                    }
                }

                @foreach (var anni in Model.Anniversary)
                {
                    int? userId = Session["UserId"] as int?;

                    if (Session["UserId"] != null && Session["UserId"].ToString() == anni.anniuserid.ToString())
                    {
                        <tr>
                            <td>Anniversary</td>
                            <td>@anni.annidatetime</td>
                            <td>@anni.annilocation</td>
                            <td>@anni.annicakes</td>
                            <td>@anni.annitheme</td>
                            <td>@anni.annidecorations</td>
                            <td>@anni.annieventcost</td>
                            <td>@anni.anniuserid</td>
                            <td>
                                @Html.ActionLink("Delete", "Delete", "Anniversary", new { id = anni.id }, null)
                            </td>
                        </tr>
                    }
                }

                @foreach (var bachelor in Model.BachelorParty)
                {
                    int? userId = Session["UserId"] as int?;

                    if (Session["UserId"] != null && Session["UserId"].ToString() == bachelor.bacheloruserid.ToString())
                    {
                        <tr>
                            <td>Bachelor Party</td>
                            <td>@bachelor.bachelordatetime</td>
                            <td>@bachelor.bachelorlocation</td>
                            <td>@bachelor.bachelorcakes</td>
                            <td>@bachelor.bachelortheme</td>
                            <td>@bachelor.bachelordecorations</td>
                            <td>@bachelor.bacheloreventcost</td>
                            <td>@bachelor.bacheloruserid</td>
                            <td>
                                @Html.ActionLink("Delete", "Delete", "Bachelor", new { id = bachelor.id }, null)
                            </td>
                        </tr>
                    }
                }

                @foreach (var cock in Model.CocktailParty)
                {
                    int? userId = Session["UserId"] as int?;

                    if (Session["UserId"] != null && Session["UserId"].ToString() == cock.cockuserid.ToString())
                    {
                        <tr>
                            <td>Cocktail Party</td>
                            <td>@cock.cockdatetime</td>
                            <td>@cock.cocklocation</td>
                            <td>@cock.cockcakes</td>
                            <td>@cock.cocktheme</td>
                            <td>@cock.cockdecorations</td>
                            <td>@cock.cockeventcost</td>
                            <td>@cock.cockuserid</td>
                            <td>
                                @Html.ActionLink("Delete", "Delete", "Cocktail", new { id = cock.id }, null)
                            </td>
                        </tr>
                    }
                }

                @foreach (var wedding in Model.Wedding)
                {
                    int? userId = Session["UserId"] as int?;

                    if (Session["UserId"] != null && Session["UserId"].ToString() == wedding.weddinguserid.ToString() && User.Identity.IsAuthenticated)
                    {
                        <tr>
                            <td>Wedding</td>
                            <td>@wedding.weddingdatetime</td>
                            <td>@wedding.weddinglocation</td>
                            <td>@wedding.weddingcakes</td>
                            <td>@wedding.weddingtheme</td>
                            <td>@wedding.weddingdecorations</td>
                            <td>@wedding.weddingeventcost</td>
                            <td>@wedding.weddinguserid</td>
                            <td>
                                @Html.ActionLink("Delete", "Delete", "Wedding", new { id = wedding.id }, null)
                            </td>
                        </tr>
                    }
                }

                @foreach (var reunion in Model.Reunion)
                {
                    int? userId = Session["UserId"] as int?;

                    <tr>
                        <td>Reunion</td>
                        <td>@reunion.reuniondatetime</td>
                        <td>@reunion.reunionlocation</td>
                        <td>@reunion.reunioncakes</td>
                        <td>@reunion.reuniontheme</td>
                        <td>@reunion.reuniondecorations</td>
                        <td>@reunion.reunioneventcost</td>
                        <td>@reunion.reunionuserid</td>
                        <td>
                            @Html.ActionLink("Delete", "Delete", "Reunion", new { id = reunion.id }, null)
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <th colspan="6">Total Cost:</th>
                    <td>
                        @{
                            var totalCost = Model.birthdaytable.Sum(b => b.bdayeventcost) +
                                             Model.babyshowertable.Sum(b => b.babyshowereventcost) +
                                             Model.Anniversary.Sum(a => a.annieventcost) +
                                             Model.BachelorParty.Sum(b => b.bacheloreventcost) +
                                             Model.CocktailParty.Sum(c => c.cockeventcost) +
                                             Model.Wedding.Sum(w => w.weddingeventcost) +
                                             Model.Reunion.Sum(r => r.reunioneventcost);
                        }
                        ₹@totalCost


                    </td>

                </tr>

                <tr>

                    <th colspan="6">Prebooking:</th>
                    <td>
                        @{
                            int halfamnt = (int)totalCost / 2;
                        }

                        ₹@halfamnt
                    </td>
                </tr>

                <tr>
                    <td>
                        @*@Html.ActionLink("Paynow", "CreateOrder", "Payment", new { totalCost = totalCost }, new { @class = "btn" })*@
                        <button id="proceedToPayment" class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#razorpayModal">>Proceed to Payment</button>
                </tr>

            </tfoot>
        </table>



    }
    else
    {
        <p>No events found in the cart.</p>
    }

</div>






<div id="razorpayModal" class="modal fade" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Payment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-dark">
                <h2>Enter Your Details</h2>

                <!-- Payment form -->
                <form id="paymentForm" method="post" action="@Url.Action("PlaceOrder")">
                    @Html.AntiForgeryToken()
                    @*@Html.Hidden("HalfAmount", totalAmount)*@

                    <div class="mb-3">
                        <label for="name" class="form-label">Name</label>
                        <input type="text" class="form-control" id="name" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" name="email" required>
                    </div>
                    <div class="mb-3">
                        <label for="contactNumber" class="form-label">Contact Number</label>
                        <input type="text" class="form-control" id="contactNumber" name="contactNumber" required>
                    </div>
                    <div class="mb-3">
                        <label for="address" class="form-label">Address</label>
                        <input type="text" class="form-control" id="address" name="address" required>
                    </div>
                    <div class="mb-3">
                        <label for="amount" class="form-label">Amount</label>
                        <input type="number" class="form-control" id="halfAmount" name="halfAmount" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="amount" class="form-label">PartialAmount</label>
                        <input type="number" class="form-control" id="PartialAmount" name="PartialAmount" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="amount" class="form-label">Booked Date and Time</label>
                        <input type="datetime" class="form-control" id="bookingdatetime" name="bookingdatetime" readonly>
                    </div>
                    <button type="submit" class="btn btn-dark" id="payButton">Pay Now</button>
                </form>

            </div>
        </div>
    </div>
</div>

<div id="paymentResult"></div>


<script>
      $(document).ready(function () {
      console.log("hi partial");
          document.getElementById("PartialAmount").value =@(  Model.birthdaytable.Sum(b => b.bdayeventcost) +
                                    Model.babyshowertable.Sum(b => b.babyshowereventcost) +
                                    Model.Anniversary.Sum(a => a.annieventcost) +
                                    Model.BachelorParty.Sum(b => b.bacheloreventcost) +
                                    Model.CocktailParty.Sum(c => c.cockeventcost) +
                                    Model.Wedding.Sum(w => w.weddingeventcost) +
                                    Model.Reunion.Sum(r => r.reunioneventcost)) /2;
  });
</script>